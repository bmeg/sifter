

class: Playbook
name: GDCCpnvert

inputs: {}

schema: bmeg-dictionary/gdcdictionary/schemas

steps:
  - desc: Scrape GDC Projects
    script:
      dockerImage: bmeg/sifter-gdc-scan
      command: [/opt/gdc-scan.py, projects]
  - desc: Scrape GDC Cases
    script:
      dockerImage: bmeg/sifter-gdc-scan
      command: [/opt/gdc-scan.py, cases]
  - desc: Loading ProjectData
    jsonLoad:
      input: out.projects.json
      transform:
        - fork:
            transform:
              -
                - project:
                    mapping:
                      code: "{{row.project_id}}"
                      programs: "{{row.program.name}}"
                - objectCreate:
                    class: project
              -
                - project:
                    mapping:
                      code: "{{row.project_id}}"
                      programs: "{{row.program.name}}"
                      submitter_id: "{{row.program.name}}"
                      projects: "{{row.project_id}}"
                      type: experiment
                - objectCreate:
                    class: experiment
  - desc: Loading CaseData
    jsonLoad:
      input: out.case.json
      transform:
        - project:
            mapping:
              studies: "{{row.project.project_id}}"
              experiments: "exp:{{row.project.project_id}}"
              type: case
        - objectCreate:
            class: case
        - fieldProcess:
            field: samples
            mapping:
              cases: "{{row.id}}"
            steps:
              #- debug: {}
              - project:
                  mapping:
                    type: sample
                    id: "{{row.sample_id}}"
              - objectCreate:
                  class: sample
              - fieldProcess:
                  field: portions
                  mapping:
                    samples: "{{row.id}}"
                  steps:
                    - fieldProcess:
                        field: analytes
                        mapping:
                          samples: "{{row.samples}}"
                        steps:
                          - fieldProcess:
                              field: aliquots
                              mapping:
                                samples: "{{row.samples}}"
                              steps:
                                - project:
                                    mapping:
                                      type: aliquot
                                      id: "{{row.aliquot_id}}"
                                - objectCreate:
                                    class: aliquot
