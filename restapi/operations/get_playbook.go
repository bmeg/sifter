// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
	strfmt "github.com/go-openapi/strfmt"
	swag "github.com/go-openapi/swag"
)

// GetPlaybookHandlerFunc turns a function with the right signature into a get playbook handler
type GetPlaybookHandlerFunc func(GetPlaybookParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetPlaybookHandlerFunc) Handle(params GetPlaybookParams) middleware.Responder {
	return fn(params)
}

// GetPlaybookHandler interface for that can handle valid get playbook params
type GetPlaybookHandler interface {
	Handle(GetPlaybookParams) middleware.Responder
}

// NewGetPlaybook creates a new http.Handler for the get playbook operation
func NewGetPlaybook(ctx *middleware.Context, handler GetPlaybookHandler) *GetPlaybook {
	return &GetPlaybook{Context: ctx, Handler: handler}
}

/*GetPlaybook swagger:route GET /playbook getPlaybook

Get list of playbooks

*/
type GetPlaybook struct {
	Context *middleware.Context
	Handler GetPlaybookHandler
}

func (o *GetPlaybook) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetPlaybookParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetPlaybookOKBodyItems0 get playbook o k body items0
// swagger:model GetPlaybookOKBodyItems0
type GetPlaybookOKBodyItems0 struct {

	// Name of playbook
	Name string `json:"name,omitempty"`
}

// Validate validates this get playbook o k body items0
func (o *GetPlaybookOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPlaybookOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPlaybookOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetPlaybookOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
