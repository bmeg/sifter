// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
	strfmt "github.com/go-openapi/strfmt"
	swag "github.com/go-openapi/swag"
)

// GetStatusHandlerFunc turns a function with the right signature into a get status handler
type GetStatusHandlerFunc func(GetStatusParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetStatusHandlerFunc) Handle(params GetStatusParams) middleware.Responder {
	return fn(params)
}

// GetStatusHandler interface for that can handle valid get status params
type GetStatusHandler interface {
	Handle(GetStatusParams) middleware.Responder
}

// NewGetStatus creates a new http.Handler for the get status operation
func NewGetStatus(ctx *middleware.Context, handler GetStatusHandler) *GetStatus {
	return &GetStatus{Context: ctx, Handler: handler}
}

/*GetStatus swagger:route GET /status getStatus

Get Loading Status

*/
type GetStatus struct {
	Context *middleware.Context
	Handler GetStatusHandler
}

func (o *GetStatus) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetStatusParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetStatusOKBody get status o k body
// swagger:model GetStatusOKBody
type GetStatusOKBody struct {

	// Current element being loaded
	Current string `json:"current,omitempty"`

	// Number of edges loaded so far
	EdgeCount int64 `json:"edgeCount,omitempty"`

	// Current Step being loaded
	StepNum int64 `json:"stepNum,omitempty"`

	// Total number of steps
	StepTotal int64 `json:"stepTotal,omitempty"`

	// Number of vertices loaded so far
	VertexCount int64 `json:"vertexCount,omitempty"`
}

// Validate validates this get status o k body
func (o *GetStatusOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetStatusOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetStatusOKBody) UnmarshalBinary(b []byte) error {
	var res GetStatusOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
