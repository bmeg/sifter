// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
	strfmt "github.com/go-openapi/strfmt"
	swag "github.com/go-openapi/swag"
)

// PostPlaybookIDGraphHandlerFunc turns a function with the right signature into a post playbook ID graph handler
type PostPlaybookIDGraphHandlerFunc func(PostPlaybookIDGraphParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostPlaybookIDGraphHandlerFunc) Handle(params PostPlaybookIDGraphParams) middleware.Responder {
	return fn(params)
}

// PostPlaybookIDGraphHandler interface for that can handle valid post playbook ID graph params
type PostPlaybookIDGraphHandler interface {
	Handle(PostPlaybookIDGraphParams) middleware.Responder
}

// NewPostPlaybookIDGraph creates a new http.Handler for the post playbook ID graph operation
func NewPostPlaybookIDGraph(ctx *middleware.Context, handler PostPlaybookIDGraphHandler) *PostPlaybookIDGraph {
	return &PostPlaybookIDGraph{Context: ctx, Handler: handler}
}

/*PostPlaybookIDGraph swagger:route POST /playbook/{id}/{graph} postPlaybookIdGraph

Post a run request

*/
type PostPlaybookIDGraph struct {
	Context *middleware.Context
	Handler PostPlaybookIDGraphHandler
}

func (o *PostPlaybookIDGraph) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPostPlaybookIDGraphParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PostPlaybookIDGraphOKBody post playbook ID graph o k body
// swagger:model PostPlaybookIDGraphOKBody
type PostPlaybookIDGraphOKBody struct {

	// id
	ID string `json:"id,omitempty"`
}

// Validate validates this post playbook ID graph o k body
func (o *PostPlaybookIDGraphOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PostPlaybookIDGraphOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostPlaybookIDGraphOKBody) UnmarshalBinary(b []byte) error {
	var res PostPlaybookIDGraphOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
