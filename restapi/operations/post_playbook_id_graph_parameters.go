// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPostPlaybookIDGraphParams creates a new PostPlaybookIDGraphParams object
// no default values defined in spec.
func NewPostPlaybookIDGraphParams() PostPlaybookIDGraphParams {

	return PostPlaybookIDGraphParams{}
}

// PostPlaybookIDGraphParams contains all the bound params for the post playbook ID graph operation
// typically these are obtained from a http.Request
//
// swagger:parameters PostPlaybookIDGraph
type PostPlaybookIDGraphParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*
	  Required: true
	  In: path
	*/
	Graph string
	/*
	  Required: true
	  In: path
	*/
	ID string
	/*
	  In: body
	*/
	Params string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewPostPlaybookIDGraphParams() beforehand.
func (o *PostPlaybookIDGraphParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	rGraph, rhkGraph, _ := route.Params.GetOK("graph")
	if err := o.bindGraph(rGraph, rhkGraph, route.Formats); err != nil {
		res = append(res, err)
	}

	rID, rhkID, _ := route.Params.GetOK("id")
	if err := o.bindID(rID, rhkID, route.Formats); err != nil {
		res = append(res, err)
	}

	if runtime.HasBody(r) {
		defer r.Body.Close()
		var body string
		if err := route.Consumer.Consume(r.Body, &body); err != nil {
			res = append(res, errors.NewParseError("params", "body", "", err))
		} else {
			// no validation required on inline body
			o.Params = body
		}
	}
	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindGraph binds and validates parameter Graph from path.
func (o *PostPlaybookIDGraphParams) bindGraph(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route

	o.Graph = raw

	return nil
}

// bindID binds and validates parameter ID from path.
func (o *PostPlaybookIDGraphParams) bindID(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route

	o.ID = raw

	return nil
}
